{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Fragment, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from 'react-native-paper';\nimport Logic from \"./Logic/Logic\";\n\nfunction mergeDeep() {\n  var isObject = function isObject(obj) {\n    return obj && typeof obj === 'object';\n  };\n\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (prev, obj) {\n    Object.keys(obj).forEach(function (key) {\n      var pVal = prev[key];\n      var oVal = obj[key];\n\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\n        prev[key] = pVal.concat.apply(pVal, _toConsumableArray(oVal));\n      } else if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n    return prev;\n  }, {});\n}\n\nfunction FormBuilder(props) {\n  var currentTheme = useTheme();\n  var formConfigArray = props.formConfigArray,\n      theme = props.theme,\n      control = props.control,\n      setFocus = props.setFocus,\n      _props$inputSpacing = props.inputSpacing,\n      inputSpacing = _props$inputSpacing === void 0 ? 15 : _props$inputSpacing,\n      _props$inputSpacingHo = props.inputSpacingHorizontal,\n      inputSpacingHorizontal = _props$inputSpacingHo === void 0 ? 15 : _props$inputSpacingHo,\n      CustomTextInput = props.CustomTextInput;\n  var THEME = theme ? mergeDeep(currentTheme, theme) : currentTheme;\n  var styles = useMemo(function () {\n    return StyleSheet.create({\n      rowStyle: {\n        flexDirection: 'row'\n      }\n    });\n  }, []);\n  return React.createElement(Fragment, null, formConfigArray.map(function (item, index) {\n    if (Array.isArray(item)) {\n      return React.createElement(View, {\n        key: index,\n        style: styles.rowStyle\n      }, item.map(function (_item, _index) {\n        var _item$CustomTextInput, _item$textInputProps$, _item$textInputProps, _item$inputSpacingHor, _item$flex, _item$inputSpacing;\n\n        var INPUT = (_item$CustomTextInput = _item == null ? void 0 : _item.CustomTextInput) != null ? _item$CustomTextInput : CustomTextInput;\n        var next = item[_index + 1] ? item[_index + 1] : formConfigArray[index + 1];\n        var nextItem = Array.isArray(next) ? next == null ? void 0 : next[0] : next;\n        var onSubmitEditing = (_item$textInputProps$ = (_item$textInputProps = _item.textInputProps) == null ? void 0 : _item$textInputProps.onSubmitEditing) != null ? _item$textInputProps$ : function () {\n          if (nextItem) {\n            if (setFocus && nextItem.type !== 'custom') {\n              setFocus(nextItem.name);\n            }\n          }\n        };\n        var returnKeyType = next ? 'next' : 'done';\n        var horizontalSpacing = _index < item.length - 1 ? (_item$inputSpacingHor = _item.inputSpacingHorizontal) != null ? _item$inputSpacingHor : inputSpacingHorizontal : 0;\n        return React.createElement(View, {\n          key: index + \" + \" + _index,\n          style: [{\n            marginRight: horizontalSpacing,\n            flex: (_item$flex = _item.flex) != null ? _item$flex : 1,\n            overflow: 'hidden'\n          }]\n        }, React.createElement(Logic, _extends({}, _item, {\n          control: control,\n          textInputProps: _objectSpread({\n            onSubmitEditing: onSubmitEditing,\n            returnKeyType: returnKeyType,\n            theme: THEME\n          }, _item.textInputProps),\n          CustomTextInput: INPUT\n        })), React.createElement(View, {\n          style: {\n            height: (_item$inputSpacing = _item == null ? void 0 : _item.inputSpacing) != null ? _item$inputSpacing : inputSpacing\n          }\n        }));\n      }));\n    } else {\n      var _item$CustomTextInput2, _item$textInputProps$2, _item$textInputProps2, _ref, _item$inputSpacing2;\n\n      var INPUT = (_item$CustomTextInput2 = item == null ? void 0 : item.CustomTextInput) != null ? _item$CustomTextInput2 : CustomTextInput;\n      var next = formConfigArray[index + 1];\n      var nextItem = Array.isArray(next) ? next == null ? void 0 : next[0] : next;\n      var onSubmitEditing = (_item$textInputProps$2 = (_item$textInputProps2 = item.textInputProps) == null ? void 0 : _item$textInputProps2.onSubmitEditing) != null ? _item$textInputProps$2 : function () {\n        if (nextItem) {\n          if (setFocus && nextItem.type !== 'custom') {\n            setFocus(nextItem.name);\n          }\n        }\n      };\n      var returnKeyType = next ? 'next' : 'done';\n      return React.createElement(Fragment, {\n        key: index\n      }, React.createElement(Logic, _extends({}, item, {\n        control: control,\n        textInputProps: _objectSpread({\n          onSubmitEditing: onSubmitEditing,\n          returnKeyType: returnKeyType,\n          theme: THEME\n        }, item.textInputProps),\n        CustomTextInput: INPUT\n      })), React.createElement(View, {\n        style: {\n          height: (_ref = (_item$inputSpacing2 = item == null ? void 0 : item.inputSpacing) != null ? _item$inputSpacing2 : inputSpacing) != null ? _ref : 15\n        }\n      }));\n    }\n  }));\n}\n\nexport default FormBuilder;","map":{"version":3,"sources":["A:/Office Work/maxhypeapp/node_modules/react-native-paper-form-builder/dist/FormBuilder.js"],"names":["React","Fragment","useMemo","useTheme","Logic","mergeDeep","isObject","obj","objects","reduce","prev","Object","keys","forEach","key","pVal","oVal","Array","isArray","concat","FormBuilder","props","currentTheme","formConfigArray","theme","control","setFocus","inputSpacing","inputSpacingHorizontal","CustomTextInput","THEME","styles","StyleSheet","create","rowStyle","flexDirection","map","item","index","_item","_index","INPUT","next","nextItem","onSubmitEditing","textInputProps","type","name","returnKeyType","horizontalSpacing","length","marginRight","flex","overflow","height"],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport Logic from './Logic/Logic';\nfunction mergeDeep(...objects) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n    return objects.reduce((prev, obj) => {\n        Object.keys(obj).forEach((key) => {\n            const pVal = prev[key];\n            const oVal = obj[key];\n            if (Array.isArray(pVal) && Array.isArray(oVal)) {\n                prev[key] = pVal.concat(...oVal);\n            }\n            else if (isObject(pVal) && isObject(oVal)) {\n                prev[key] = mergeDeep(pVal, oVal);\n            }\n            else {\n                prev[key] = oVal;\n            }\n        });\n        return prev;\n    }, {});\n}\nfunction FormBuilder(props) {\n    const currentTheme = useTheme();\n    const { formConfigArray, theme, control, setFocus, inputSpacing = 15, inputSpacingHorizontal = 15, CustomTextInput, } = props;\n    const THEME = theme ? mergeDeep(currentTheme, theme) : currentTheme;\n    const styles = useMemo(() => StyleSheet.create({\n        rowStyle: {\n            flexDirection: 'row',\n        },\n    }), []);\n    return (<Fragment>\n      {formConfigArray.map((item, index) => {\n            if (Array.isArray(item)) {\n                return (<View key={index} style={styles.rowStyle}>\n              {item.map((_item, _index) => {\n                        const INPUT = _item?.CustomTextInput ?? CustomTextInput;\n                        const next = item[_index + 1]\n                            ? item[_index + 1]\n                            : formConfigArray[index + 1];\n                        const nextItem = Array.isArray(next) ? next?.[0] : next;\n                        const onSubmitEditing = _item.textInputProps?.onSubmitEditing ??\n                            (() => {\n                                if (nextItem) {\n                                    if (setFocus && nextItem.type !== 'custom') {\n                                        setFocus(nextItem.name);\n                                    }\n                                }\n                            });\n                        const returnKeyType = next ? 'next' : 'done';\n                        const horizontalSpacing = _index < item.length - 1\n                            ? _item.inputSpacingHorizontal ?? inputSpacingHorizontal\n                            : 0;\n                        return (<View key={`${index} + ${_index}`} style={[\n                                {\n                                    marginRight: horizontalSpacing,\n                                    flex: _item.flex ?? 1,\n                                    overflow: 'hidden',\n                                },\n                            ]}>\n                    <Logic {..._item} control={control} textInputProps={{\n                                onSubmitEditing,\n                                returnKeyType,\n                                theme: THEME,\n                                ..._item.textInputProps,\n                            }} CustomTextInput={INPUT}/>\n                    <View style={{\n                                height: _item?.inputSpacing ?? inputSpacing,\n                            }}/>\n                  </View>);\n                    })}\n            </View>);\n            }\n            else {\n                const INPUT = item?.CustomTextInput ?? CustomTextInput;\n                const next = formConfigArray[index + 1];\n                const nextItem = Array.isArray(next) ? next?.[0] : next;\n                const onSubmitEditing = item.textInputProps?.onSubmitEditing ??\n                    (() => {\n                        if (nextItem) {\n                            if (setFocus && nextItem.type !== 'custom') {\n                                setFocus(nextItem.name);\n                            }\n                        }\n                    });\n                const returnKeyType = next ? 'next' : 'done';\n                return (<Fragment key={index}>\n              <Logic {...item} control={control} textInputProps={{\n                        onSubmitEditing,\n                        returnKeyType,\n                        theme: THEME,\n                        ...item.textInputProps,\n                    }} CustomTextInput={INPUT}/>\n              <View style={{ height: item?.inputSpacing ?? inputSpacing ?? 15 }}/>\n            </Fragment>);\n            }\n        })}\n    </Fragment>);\n}\nexport default FormBuilder;\n"]},"metadata":{},"sourceType":"module"}