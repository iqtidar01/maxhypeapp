{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, Component, useRef } from 'react';\nimport Axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-paper';\nimport { BASE_URL, COLORS } from \"../../constants/settings\";\nimport ApiContainer from \"../../api/ApiContainer\";\nimport ChildClass from \"./child\";\nexport default function Home(props) {\n  var fref = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      productDataList = _useState4[0],\n      productData = _useState4[1];\n\n  var getProductList = function getProductList() {\n    var response;\n    return _regeneratorRuntime.async(function getProductList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Axios.get(BASE_URL + \"/product_list\"));\n\n          case 3:\n            response = _context.sent;\n            productData(response.data.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {}, []);\n\n  var fetchapi = function fetchapi() {};\n\n  var imagePath = {\n    uri: 'https://igtechservices.com/public/uploads/setting/1631384125-logo-ig.png'\n  };\n  return React.createElement(View, null, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '700'\n    }\n  }, \"Home Screen\"), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '700'\n    }\n  }, BASE_URL), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '700'\n    }\n  }, COLORS.white), React.createElement(TextInput, {\n    label: \"Email\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  }), React.createElement(ChildClass, {\n    name: \"Max\",\n    ref: fref\n  }), React.createElement(Button, {\n    title: 'Click using Fetch',\n    color: \"green\",\n    onPress: getProductList\n  }), React.createElement(FlatList, {\n    data: productDataList,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, null, item.product_name, \", \", item.product_name);\n    }\n  }));\n}","map":{"version":3,"sources":["A:/Office Work/maxhype/maxhypeapp/components/home/index.js"],"names":["React","useEffect","useState","Component","useRef","Axios","TextInput","BASE_URL","COLORS","ApiContainer","ChildClass","Home","props","fref","text","setText","productDataList","productData","getProductList","get","response","data","console","error","fetchapi","imagePath","uri","fontSize","fontWeight","white","index","id","item","product_name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,SAASC,QAAT,EAAmBC,MAAnB;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAMC,IAAI,GAAGT,MAAM,EAAnB;;AACA,kBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAuCb,QAAQ,CAAC,EAAD,CAA/C;AAAA;AAAA,MAAOc,eAAP;AAAA,MAAwBC,WAAxB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEIb,KAAK,CAACc,GAAN,CAAaZ,QAAb,mBAFJ;;AAAA;AAEba,YAAAA,QAFa;AAGnBH,YAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAX;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAKnBC,YAAAA,OAAO,CAACC,KAAR;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAQAtB,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;AACA,MAAMuB,QAAQ,GAAG,SAAXA,QAAW,GAAM,CAAE,CAAzB;;AAEA,MAAIC,SAAS,GAAG;AACdC,IAAAA,GAAG,EAAE;AADS,GAAhB;AAIA,SACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B;AAAb,mBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B;AAAb,KAAmDrB,QAAnD,CAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B;AAAb,KAAmDpB,MAAM,CAACqB,KAA1D,CAHF,EAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEf,IAFT;AAGE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA;AAHhB,IALF,EAUE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,IAAA,GAAG,EAAED;AAA5B,IAVF,EAWE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,mBADT;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAEK;AAHX,IAXF,EAiBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,eADR;AAEE,IAAA,YAAY,EAAE,4BAASc,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD,QACGA,IAAI,CAACC,YADR,QACwBD,IAAI,CAACC,YAD7B,CADU;AAAA;AAHd,IAjBF,CADF;AA6BD","sourcesContent":["import React, { useEffect, useState, Component, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Button,\r\n  Image,\r\n} from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\n\r\nimport { BASE_URL, COLORS } from '../../constants/settings';\r\nimport ApiContainer from '../../api/ApiContainer';\r\nimport ChildClass from './child';\r\n\r\nexport default function Home(props) {\r\n  const fref = useRef();\r\n  const [text, setText] = useState('');\r\n  const [productDataList, productData] = useState([]);\r\n  const getProductList = async () => {\r\n    try {\r\n      const response = await Axios.get(`${BASE_URL}/product_list`);\r\n      productData(response.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {}, []);\r\n  const fetchapi = () => {};\r\n\r\n  let imagePath = {\r\n    uri: 'https://igtechservices.com/public/uploads/setting/1631384125-logo-ig.png',\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text style={{ fontSize: 16, fontWeight: '700' }}>Home Screen</Text>\r\n      <Text style={{ fontSize: 16, fontWeight: '700' }}>{BASE_URL}</Text>\r\n      <Text style={{ fontSize: 16, fontWeight: '700' }}>{COLORS.white}</Text>\r\n\r\n      <TextInput\r\n        label='Email'\r\n        value={text}\r\n        onChangeText={(text) => setText(text)}\r\n      />\r\n      <ChildClass name='Max' ref={fref} />\r\n      <Button\r\n        title={'Click using Fetch'}\r\n        color='green'\r\n        onPress={getProductList}\r\n      />\r\n\r\n      <FlatList\r\n        data={productDataList}\r\n        keyExtractor={({ id }, index) => id}\r\n        renderItem={({ item }) => (\r\n          <Text>\r\n            {item.product_name}, {item.product_name}\r\n          </Text>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}