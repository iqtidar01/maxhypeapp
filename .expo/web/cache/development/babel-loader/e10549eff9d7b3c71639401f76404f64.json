{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar, Divider, List, Searchbar, Surface, useTheme } from 'react-native-paper';\n\nfunction AutoComplete(props) {\n  var _textInputProps$label;\n\n  var visible = props.visible,\n      setVisible = props.setVisible,\n      textInputProps = props.textInputProps,\n      options = props.options,\n      field = props.field;\n  var theme = useTheme();\n  var styles = useMemo(function () {\n    return StyleSheet.create({\n      containerStyle: {\n        flex: 1\n      },\n      searchStyle: {\n        padding: 20\n      }\n    });\n  }, []);\n\n  var _useState = useState(field.value),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  return React.createElement(Modal, {\n    visible: visible,\n    onDismiss: function onDismiss() {\n      return setVisible(false);\n    }\n  }, React.createElement(Surface, {\n    style: styles.containerStyle\n  }, React.createElement(Appbar.Header, null, React.createElement(Appbar.Action, {\n    icon: 'close',\n    onPress: function onPress() {\n      return setVisible(false);\n    }\n  }), React.createElement(Appbar.Content, {\n    title: textInputProps == null ? void 0 : textInputProps.label\n  }), React.createElement(Appbar.Action, {\n    icon: 'check',\n    disabled: !selectedValue,\n    onPress: function onPress() {\n      field.onChange(selectedValue);\n      setVisible(false);\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles.containerStyle\n  }, React.createElement(View, {\n    style: styles.searchStyle\n  }, React.createElement(Searchbar, {\n    value: search,\n    onChangeText: setSearch,\n    placeholder: \"Search \" + ((_textInputProps$label = textInputProps == null ? void 0 : textInputProps.label) != null ? _textInputProps$label : '')\n  })), React.createElement(FlatList, {\n    data: options.filter(function (option) {\n      return option.label.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n    }),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(List.Item, {\n        title: item.label,\n        onPress: function onPress() {\n          setSelectedValue(\"\" + item.value);\n        },\n        titleStyle: {\n          color: \"\" + item.value === selectedValue ? theme.colors.primary : theme.colors.text\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Divider, null);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.value;\n    }\n  }))));\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["A:/Office Work/maxhype/maxhypeapp/node_modules/react-native-paper-form-builder/dist/Components/AutoComplete.js"],"names":["React","useMemo","useState","Appbar","Divider","List","Searchbar","Surface","useTheme","AutoComplete","props","visible","setVisible","textInputProps","options","field","theme","styles","StyleSheet","create","containerStyle","flex","searchStyle","padding","value","selectedValue","setSelectedValue","search","setSearch","label","onChange","filter","option","toLowerCase","indexOf","item","color","colors","primary","text"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { FlatList, Modal, SafeAreaView, StyleSheet, View } from 'react-native';\nimport { Appbar, Divider, List, Searchbar, Surface, useTheme, } from 'react-native-paper';\nfunction AutoComplete(props) {\n    const { visible, setVisible, textInputProps, options, field } = props;\n    const theme = useTheme();\n    const styles = useMemo(() => StyleSheet.create({\n        containerStyle: {\n            flex: 1,\n        },\n        searchStyle: {\n            padding: 20,\n        },\n    }), []);\n    const [selectedValue, setSelectedValue] = useState(field.value);\n    const [search, setSearch] = useState('');\n    return (<Modal visible={visible} onDismiss={() => setVisible(false)}>\n      <Surface style={styles.containerStyle}>\n        <Appbar.Header>\n          <Appbar.Action icon={'close'} onPress={() => setVisible(false)}/>\n          <Appbar.Content title={textInputProps?.label}/>\n          <Appbar.Action icon={'check'} disabled={!selectedValue} onPress={() => {\n            field.onChange(selectedValue);\n            setVisible(false);\n        }}/>\n        </Appbar.Header>\n        <SafeAreaView style={styles.containerStyle}>\n          <View style={styles.searchStyle}>\n            <Searchbar value={search} onChangeText={setSearch} placeholder={`Search ${textInputProps?.label ?? ''}`}/>\n          </View>\n          <FlatList data={options.filter((option) => option.label.toLowerCase().indexOf(search.toLowerCase()) !== -1)} renderItem={({ item }) => (<List.Item title={item.label} onPress={() => {\n                setSelectedValue(`${item.value}`);\n            }} titleStyle={{\n                color: `${item.value}` === selectedValue\n                    ? theme.colors.primary\n                    : theme.colors.text,\n            }}/>)} ItemSeparatorComponent={() => <Divider />} keyExtractor={(item) => `${item.value}`}/>\n        </SafeAreaView>\n      </Surface>\n    </Modal>);\n}\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}