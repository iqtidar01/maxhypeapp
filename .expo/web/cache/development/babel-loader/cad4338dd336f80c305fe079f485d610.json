{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { BASE_URL } from \"../constants/settings\";\n\nvar ApiContainer = function (_Component) {\n  _inherits(ApiContainer, _Component);\n\n  var _super = _createSuper(ApiContainer);\n\n  function ApiContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ApiContainer);\n\n    _this = _super.call(this, props);\n\n    _this.goForAxios = function () {\n      _this.setState({\n        fromFetch: false,\n        loading: true\n      });\n\n      axios.get(\"https://jsonplaceholder.typicode.com/users\").then(function (response) {\n        console.log('getting data from axios', response.data);\n\n        _this.setState({\n          loading: false,\n          axiosData: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      fromFetch: false,\n      fromAxios: false,\n      dataSource: [],\n      axiosData: null\n    };\n    return _this;\n  }\n\n  return ApiContainer;\n}(Component);\n\nexport var test = {\n  axiosData: axiosData,\n  black: '#000000'\n};","map":{"version":3,"sources":["F:/xampp73/htdocs/maxhypeapp/AwesomeProject/api/home.js"],"names":["React","useEffect","useState","Axios","BASE_URL","ApiContainer","props","goForAxios","setState","fromFetch","loading","axios","get","then","response","console","log","data","axiosData","catch","error","state","fromAxios","dataSource","Component","test","black"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAWnBC,UAXmB,GAWN,YAAM;AACf,YAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAE,KADD;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;;AAIAC,MAAAA,KAAK,CAACC,GAAN,CAAU,4CAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,QAAQ,CAACG,IAAhD;;AACI,cAAKT,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAE,KADC;AAEVQ,UAAAA,SAAS,EAAEJ,QAAQ,CAACG;AAFV,SAAd;AAIP,OAPL,EAQKE,KARL,CAQW,UAAAC,KAAK,EAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OAVL;AAWH,KA3BkB;;AAEf,UAAKC,KAAL,GAAa;AACTX,MAAAA,OAAO,EAAE,KADA;AAETD,MAAAA,SAAS,EAAE,KAFF;AAGTa,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTL,MAAAA,SAAS,EAAE;AALF,KAAb;AAFe;AASlB;;;EAVwBM,S;;AAgC3B,OAAO,IAAMC,IAAI,GAAG;AAClBP,EAAAA,SAAS,EAAEA,SADO;AAElBQ,EAAAA,KAAK,EAAE;AAFW,CAAb","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {BASE_URL}  from '../constants/settings';\r\n\r\nclass ApiContainer extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          loading: false,\r\n          fromFetch: false,\r\n          fromAxios: false,\r\n          dataSource: [],\r\n          axiosData: null\r\n      };\r\n  }\r\n\r\n  goForAxios = () => {\r\n      this.setState({\r\n          fromFetch: false,\r\n          loading: true,\r\n      })\r\n      axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n          .then(response => {\r\n              console.log('getting data from axios', response.data);\r\n                  this.setState({\r\n                      loading: false,\r\n                      axiosData: response.data\r\n                  })\r\n          })\r\n          .catch(error => {\r\n              console.log(error);\r\n          });\r\n  }\r\n\r\n}\r\n\r\nexport const test = {\r\n  axiosData: axiosData,\r\n  black: '#000000',\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}