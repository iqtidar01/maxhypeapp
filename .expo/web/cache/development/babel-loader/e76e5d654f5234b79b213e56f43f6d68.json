{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, Component, useRef } from 'react';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ProductCardItem from \"./ProductCardItem\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport { width, height };\nimport Axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function Product() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      home = _useState2[0],\n      setHome = _useState2[1];\n\n  var isCarousel = React.useRef(null);\n  var data = home == null ? void 0 : home.map(function (data) {\n    return [{\n      title: data == null ? void 0 : data.title,\n      body: data == null ? void 0 : data.heading,\n      imgUrl: data == null ? void 0 : data.product_dp,\n      buttontext: data == null ? void 0 : data.button_text\n    }];\n  });\n\n  var homeSilder = function homeSilder() {\n    var response;\n    return _regeneratorRuntime.async(function homeSilder$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Axios.get(\"https://themaxhype.com/api/home\"));\n\n          case 3:\n            response = _context.sent;\n            setHome(response == null ? void 0 : response.data['product']);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    homeSilder();\n  }, []);\n  return React.createElement(View, null, React.createElement(Carousel, {\n    layout: \"stack\",\n    layoutCardOffset: 9,\n    ref: isCarousel,\n    data: data,\n    renderItem: ProductCardItem,\n    sliderWidth: width,\n    itemWidth: width,\n    useScrollView: true\n  }));\n}","map":{"version":3,"sources":["A:/Office Work/maxhypeapp/components/home/Product.js"],"names":["React","useEffect","useState","Component","useRef","Carousel","Pagination","ProductCardItem","Dimensions","get","width","height","Axios","Product","home","setHome","isCarousel","data","map","title","body","heading","imgUrl","product_dp","buttontext","button_text","homeSilder","response","console","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,4BAArC;AACA,OAAOC,eAAP;;AACO,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;;AACP,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;;;AAaA,eAAe,SAASC,OAAT,GAAmB;AAChC,kBAAwBX,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,UAAU,GAAGhB,KAAK,CAACI,MAAN,CAAa,IAAb,CAAnB;AAEA,MAAMa,IAAI,GAAGH,IAAH,oBAAGA,IAAI,CAAEI,GAAN,CAAU,UAACD,IAAD,EAAU;AAC/B,WAAO,CACL;AACEE,MAAAA,KAAK,EAAEF,IAAF,oBAAEA,IAAI,CAAEE,KADf;AAEEC,MAAAA,IAAI,EAAEH,IAAF,oBAAEA,IAAI,CAAEI,OAFd;AAGEC,MAAAA,MAAM,EAAEL,IAAF,oBAAEA,IAAI,CAAEM,UAHhB;AAIEC,MAAAA,UAAU,EAAEP,IAAF,oBAAEA,IAAI,CAAEQ;AAJpB,KADK,CAAP;AAQD,GATY,CAAb;;AAUA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQd,KAAK,CAACH,GAAN,mCAFR;;AAAA;AAETkB,YAAAA,QAFS;AAIfZ,YAAAA,OAAO,CAACY,QAAD,oBAACA,QAAQ,CAAEV,IAAV,CAAe,SAAf,CAAD,CAAP;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfW,YAAAA,OAAO,CAACC,KAAR;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AASA5B,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,IAAD,QACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,gBAAgB,EAAE,CAFpB;AAGE,IAAA,GAAG,EAAEV,UAHP;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,UAAU,EAAEV,eALd;AAME,IAAA,WAAW,EAAEG,KANf;AAOE,IAAA,SAAS,EAAEA,KAPb;AASE,IAAA,aAAa,EAAE;AATjB,IADF,CADF;AAeD","sourcesContent":["import React, { useEffect, useState, Component, useRef } from 'react';\r\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\r\nimport ProductCardItem from './ProductCardItem';\r\nexport const { width, height } = Dimensions.get('window');\r\nimport Axios from 'axios';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Button,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nexport default function Product() {\r\n  const [home, setHome] = useState([]);\r\n  const isCarousel = React.useRef(null);\r\n\r\n  const data = home?.map((data) => {\r\n    return [\r\n      {\r\n        title: data?.title,\r\n        body: data?.heading,\r\n        imgUrl: data?.product_dp,\r\n        buttontext: data?.button_text,\r\n      },\r\n    ];\r\n  });\r\n  const homeSilder = async () => {\r\n    try {\r\n      const response = await Axios.get(`https://themaxhype.com/api/home`);\r\n      // console.log(response.data);\r\n      setHome(response?.data['product']);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    homeSilder();\r\n  }, []);\r\n  return (\r\n    <View>\r\n      <Carousel\r\n        layout='stack'\r\n        layoutCardOffset={9}\r\n        ref={isCarousel}\r\n        data={data}\r\n        renderItem={ProductCardItem}\r\n        sliderWidth={width}\r\n        itemWidth={width}\r\n        // onSnapToItem={(index) => setIndex(index)}\r\n        useScrollView={true}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}