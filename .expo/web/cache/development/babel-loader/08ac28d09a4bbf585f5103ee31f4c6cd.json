{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FormBuilder } from 'react-native-paper-form-builder';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'react-native-paper';\nexport default function Contact() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      message: ''\n    },\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      setFocus = _useForm.setFocus,\n      handleSubmit = _useForm.handleSubmit;\n\n  var formSubmit = function formSubmit(data) {\n    console.log('form data', data);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '700'\n    }\n  }, \" Contact Screen \"), React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollViewStyle\n  }, React.createElement(Text, {\n    style: styles.headingStyle\n  }, \"Contact Us\"), React.createElement(FormBuilder, {\n    control: control,\n    setFocus: setFocus,\n    formConfigArray: [{\n      type: 'email',\n      name: 'email',\n      rules: {\n        required: {\n          value: true,\n          message: 'Email is required'\n        }\n      },\n      textInputProps: {\n        label: 'Email'\n      }\n    }, {\n      type: 'password',\n      name: 'password',\n      rules: {\n        required: {\n          value: true,\n          message: 'Password is required'\n        }\n      },\n      textInputProps: {\n        label: 'Password'\n      }\n    }, {\n      type: 'text',\n      name: 'message',\n      rules: {\n        required: {\n          value: true,\n          message: 'message is required'\n        }\n      },\n      textInputProps: {\n        label: 'message'\n      }\n    }]\n  }), React.createElement(Button, {\n    mode: 'contained',\n    onPress: handleSubmit(formSubmit)\n  }, \"Submit\")));\n}\nvar styles = StyleSheet.create({\n  containerStyle: {\n    flex: 1\n  },\n  scrollViewStyle: {\n    flex: 1,\n    padding: 15,\n    justifyContent: 'center'\n  },\n  headingStyle: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginBottom: 40\n  }\n});","map":{"version":3,"sources":["A:/Office Work/maxhype/maxhypeapp/components/contact/index.js"],"names":["React","useState","FormBuilder","useForm","Button","Contact","email","setEmail","name","setName","message","setMessage","defaultValues","password","mode","control","setFocus","handleSubmit","formSubmit","data","console","log","flex","alignItems","justifyContent","fontSize","fontWeight","styles","scrollViewStyle","headingStyle","type","rules","required","value","textInputProps","label","StyleSheet","create","containerStyle","padding","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView, Text } from 'react-native';\r\nimport { FormBuilder } from 'react-native-paper-form-builder';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from 'react-native-paper';\r\nexport default function Contact() {\r\n  const [email, setEmail] = useState();\r\n  const [name, setName] = useState();\r\n  const [message, setMessage] = useState();\r\n  const { control, setFocus, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      message: '',\r\n    },\r\n    mode: 'onChange',\r\n  });\r\n  const formSubmit = (data) => {\r\n    console.log('form data', data);\r\n  };\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 16, fontWeight: '700' }}> Contact Screen </Text>\r\n      <ScrollView contentContainerStyle={styles.scrollViewStyle}>\r\n        <Text style={styles.headingStyle}>Contact Us</Text>\r\n        <FormBuilder\r\n          control={control}\r\n          setFocus={setFocus}\r\n          formConfigArray={[\r\n            {\r\n              type: 'email',\r\n              name: 'email',\r\n\r\n              rules: {\r\n                required: {\r\n                  value: true,\r\n                  message: 'Email is required',\r\n                },\r\n              },\r\n              textInputProps: {\r\n                label: 'Email',\r\n              },\r\n            },\r\n            {\r\n              type: 'password',\r\n              name: 'password',\r\n              rules: {\r\n                required: {\r\n                  value: true,\r\n                  message: 'Password is required',\r\n                },\r\n              },\r\n              textInputProps: {\r\n                label: 'Password',\r\n              },\r\n            },\r\n            {\r\n              type: 'text',\r\n              name: 'message',\r\n              rules: {\r\n                required: {\r\n                  value: true,\r\n                  message: 'message is required',\r\n                },\r\n              },\r\n              textInputProps: {\r\n                label: 'message',\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <Button mode={'contained'} onPress={handleSubmit(formSubmit)}>\r\n          Submit\r\n        </Button>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  containerStyle: {\r\n    flex: 1,\r\n  },\r\n  scrollViewStyle: {\r\n    flex: 1,\r\n    padding: 15,\r\n    justifyContent: 'center',\r\n  },\r\n  headingStyle: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}