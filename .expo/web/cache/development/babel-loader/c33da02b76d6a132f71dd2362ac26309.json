{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { BASE_URL } from \"../constants/settings\";\n\nvar testproducts = function (_Component) {\n  _inherits(testproducts, _Component);\n\n  var _super = _createSuper(testproducts);\n\n  function testproducts(props) {\n    var _this;\n\n    _classCallCheck(this, testproducts);\n\n    _this = _super.call(this, props);\n\n    _this.goForAxios = function () {\n      _this.setState({\n        fromFetch: false,\n        loading: true\n      });\n\n      axios.get(BASE_URL + \"/product_list\").then(function (response) {\n        console.log('getting data from axios', response.data);\n        setTimeout(function () {\n          _this.setState({\n            loading: false,\n            axiosData: response.data\n          });\n        }, 2000);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      fromFetch: false,\n      fromAxios: false,\n      dataSource: [],\n      axiosData: null\n    };\n    return _this;\n  }\n\n  return testproducts;\n}(Component);\n\n;","map":{"version":3,"sources":["F:/xampp73/htdocs/maxhypeapp/AwesomeProject/api/home.js"],"names":["React","useEffect","useState","Axios","BASE_URL","testproducts","props","goForAxios","setState","fromFetch","loading","axios","get","then","response","console","log","data","setTimeout","axiosData","catch","error","state","fromAxios","dataSource","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAUrBC,UAVqB,GAUR,YAAM;AACjB,YAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAE,KADD;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;;AAKAC,MAAAA,KAAK,CAACC,GAAN,CAAaR,QAAb,oBACKS,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,QAAQ,CAACG,IAAhD;AACAC,QAAAA,UAAU,CAAC,YAAM;AACb,gBAAKV,QAAL,CAAc;AACVE,YAAAA,OAAO,EAAE,KADC;AAEVS,YAAAA,SAAS,EAAEL,QAAQ,CAACG;AAFV,WAAd;AAIH,SALS,EAKP,IALO,CAAV;AAMH,OATL,EAUKG,KAVL,CAUW,UAAAC,KAAK,EAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH,OAZL;AAaD,KA7BoB;;AAEjB,UAAKC,KAAL,GAAa;AACTZ,MAAAA,OAAO,EAAE,KADA;AAETD,MAAAA,SAAS,EAAE,KAFF;AAGTc,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTL,MAAAA,SAAS,EAAE;AALF,KAAb;AAFiB;AASpB;;;EAV0BM,S;;AA+BxB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {BASE_URL}  from '../constants/settings';\r\n\r\nclass testproducts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loading: false,\r\n        fromFetch: false,\r\n        fromAxios: false,\r\n        dataSource: [],\r\n        axiosData: null\r\n    };\r\n}\r\ngoForAxios = () => {\r\n  this.setState({\r\n      fromFetch: false,\r\n      loading: true,\r\n\r\n  })\r\n  axios.get(`${BASE_URL}/product_list`)\r\n      .then(response => {\r\n          console.log('getting data from axios', response.data);\r\n          setTimeout(() => {\r\n              this.setState({\r\n                  loading: false,\r\n                  axiosData: response.data\r\n              })\r\n          }, 2000)\r\n      })\r\n      .catch(error => {\r\n          console.log(error);\r\n      });\r\n}\r\n  };"]},"metadata":{},"sourceType":"module"}